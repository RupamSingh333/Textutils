{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","mystyle","setmystyle","_useState3","_useState4","btnText","setbtnText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","concat","mode","href","title","aria-label","aria-current","aboutText","togglemode","role","htmlFor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","background","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitlize","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.56b4d945.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n\r\n    const [mystyle, setmystyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const [btnText, setbtnText] = useState('Enable dark mode')\r\n\r\n    const togalStyle = () => {\r\n\r\n        if (mystyle.color === 'black') {\r\n            setmystyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtnText('Enable light mode')\r\n\r\n        } else {\r\n            setmystyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtnText('Enable dark mode')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container' style={mystyle}>\r\n            <h1 className='my-3'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={mystyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle} >\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='container my-3'>\r\n                <button type=\"button\" onClick={togalStyle} className='btn btn-primary'>{btnText}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n         {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n         <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n               {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n               <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n               {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n               <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Default',\r\n  aboutText: 'About default'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpclick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to UpperCase\",\"success\");\r\n  }\r\n\r\n  const handleOrchange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleLoclick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to LowerCase\",\"success\");\r\n  }\r\n\r\n  const handleclearclick = () => {\r\n    let newtext = ('');\r\n    setText(newtext);\r\n    props.showAlert(\"Text Cleared\",\"success\");\r\n  }\r\n\r\n  const handlecopy = () =>{\r\n    var text = document.getElementById('mybox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copy\",\"success\");\r\n\r\n  }\r\n\r\n  const handleExtaSpace = () =>{\r\n    var newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Remove Extra Space\",\"success\");\r\n  }\r\n\r\n  // setText('Hello Set text');\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\" id=\"mybox\" value={text} onChange={handleOrchange} style={{background: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#02033e'}} rows=\"5\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>Conver to Upercase</button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleLoclick}>Conver to Lowercase</button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handlecopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleExtaSpace}>Remove Extra Space</button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleclearclick}>Clear</button>\r\n\r\n\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2 style={{color: props.mode==='dark'?'white':'black'}}>Your text summary</h2>\r\n        <p style={{color: props.mode==='dark'?'white':'black'}} >{text.split(\" \").length} Words and  {text.length} Characters</p>\r\n        <p style={{color: props.mode==='dark'?'white':'black'}} >{0.008*text.split(\" \").length} Minutes read</p>\r\n        <h2 style={{color: props.mode==='dark'?'white':'black'}} >Preview</h2>\r\n        <p style={{color: props.mode==='dark'?'white':'black'}}>{text.length>0?text:\"Enter Something Preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitlize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitlize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#02033e';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = (\"TextUtils Dark Mode\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = (\"TextUtils Light Mode\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analysic below\" mode={mode} />\n              <About />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}